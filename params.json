{"name":"Restplate","tagline":"Simple PHP Restful Router","body":"#RestPlate\r\n\r\nA super simple PHP Restful Router. RestPlate takes a route (URL) an executes the appropriate method (controller) automatically. RestPlate was build with a RESTful API approach in mind, but not limited to. More specifically build for client side apps using javascript frameworks like [Backbone](https://github.com/documentcloud/backbone) etc.\r\n\r\n## How it works\r\nRestPlate takes a route (URL) an turns it into segments. It uses those segments to navigate itself to the correct method (controller).\r\n\r\n`[GET] example.com/user/profile/1819`\r\nRestPlate will navigate to the **user** class (user.php) an look for a **get_profile()** method. It will pass the last segment of the url (1819) to the method.\r\n\r\n`[POST] example.com/user/edit/1819`\r\nRestPlate will navigate to the **user** class (user.php) an look for a **post_edit()** method. It will pass the last segment of the url (1819) to the method.\r\n\r\n`[GET] example.com/posts/` RestPlate will navigate to the **posts** class (posts.php) an look for a **get_root()** function.\r\n\r\n`[GET] example.com` RestPlate will navigate to the **base** class (base.php) an look for a **get_root()** method. Info on changing the **base** classname see options section below.\r\n\r\n### Notes\r\nAnytime a method with the prefix request type `get_user()` is not found, RestPlate will default to looking for `user()` before returning a 404.\r\n\r\nAll requests without a method will automatically get forward to a root method.\r\n\r\n## Getting Started\r\n1. Setup a URL rewrite to point all requests to your app router, (.htaccess) included.\r\n2. Include RestPlate `require 'RestPlate.php';`\r\n3. Define your app `$app = new RestPlate();`\r\n4. Initiate your app `$app->init();`\r\n\r\n## Usage\r\n\r\n```php\r\n<?php\r\n\r\nrequire 'RestPlate.php';\r\n\r\n\t$app = new RestPlate();\r\n\t$app->init();\r\n\r\n```\r\n\r\n```php\r\n<?php\r\n\r\nclass Great {\r\n\r\n\tfunction me($name){\r\n\r\n\t\treturn array( 'Hello, ' . $name );\r\n\r\n\t}\r\n\r\n}\r\n\r\n```\r\nNow if we browse to `example.com/great/me/Adam` we will see \"Hello, Adam\". Which will be encode in JSON.\r\n\r\n\r\n## Filters\r\nRestPlate supports before execution filters.  These are functions that will be executed before a method is executed.  These can be used for anything from checking users credentials to logging users requests.\r\n\r\n### Filter Usage\r\nUsing filters is pretty simple.  First add the filter to the RestPlate instance by using the **addFilter()** method as shown below. Then in the class where you want the filter to be applied, add a public **$filter** variable on the class.\r\n```php\r\n<?php\r\n\r\n// Add the filter to the RestPlate instance.\r\n\r\n\t$app->addFilter(\"authCheck\", function(){\r\n\r\n\t\t// Check users credentials...\r\n\r\n\t});\r\n\r\n```\r\n\r\n```php\r\n<?php\r\n\r\n// Add the filters array to our class.\r\n\r\n\tclass User {\r\n\t\r\n\t\tpublic $filters = array('authCheck');\r\n\r\n\t\tpublic function edit(){\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n```\r\nThe **$filter** variable is an array, this allows you to apply multiple filters to a single class.\r\n\r\n## Options\r\nRestPlate has a few options built in that you can change at runtime.\r\n\r\n`$classPath` Where your class files are stored. *Default Null*\r\n\r\n`$json` Encode output in JSON format. *Default TRUE*\r\n\r\n`$baseClass` The class that index routes should resolve to. *Default 'base'*\r\n\r\n### Changing Options\r\n```php\r\n<?php\r\n\r\n// Our instance is defined as $app\r\n\r\n\t$app->classPath = '/controllers/';\r\n\r\n```\r\nNote: options must be changed before init() method is called.\r\n\r\n## Security Note\r\nIts recommended that you use the **classPath** option an store all your classes in their own directory. Since RestPlates router is fully automated, this opens the door for someone to execute a method you do not want ran from a web request. By storing all your classes (controllers) in a specific directory, RestPlate will only execute classes from that directory. Stopping any unwanted method executions.\r\n\r\n## License\r\nRestPlate is open-sourced software licensed under the MIT License.","google":"UA-40394551-1","note":"Don't delete this file! It's used internally to help with page regeneration."}